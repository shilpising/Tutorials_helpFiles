The article presents some of the frequently asked interview questions in relation with unit testing with Java code. Please suggest other questions tthat you came across and I shall include in the list below.

What is unit testing? Which unit testing framework did you use? What are some of the common Java unit testing frameworks? 
Ans: Read the definition of Unit testing on Wikipedia page for unit testing. Simply speaking, unit testing is about testing a block of code in isolation. There are two popular unit testing framework in Java named as Junit, TestNG.

In SDLC, When is the right time to start writing unit tests? 
Ans: Test-along if not test-driven; Writing unit tests towards end is not very effective. Test-along technique recommends developers to write the unit tests as they go with their development.

With Junit 4, do we still need methods such as setUp and tearDown? 
Ans: No. This is taken care with help of @Before and @After annotations respectively

What do following junit test annotations mean? 
Ans: Following is a list of frequently used JUnit 4 annotations:@Test (@Test identifies a test method)
@Before (Ans: @Before method will execute before every JUnit4 test)@After (Ans: @After method will execute after every JUnit4 test)@BeforeClass (Ans: @BeforeClass method will be executed before JUnit test for a Class starts)@AfterClass (Ans: @AfterClass method will be executed after JUnit test for a Class is completed)@Ignore (@Ignore method will not be executed)

How do one do exception handling unit tests using @Test annotation? 
A ns: @Test(expected={exception class}. For example: @Test(expected=IllegalArgumentException.class)
Write a sample unit testing method for testing exception named as IndexOutOfBoundsException when working with ArrayList?

@Test(expected=IndexOutOfBoundsException.class)
public void outOfBounds() {
new ArrayList<Object>().get(1);
}
Write a sample unit testing method for testing timeout?

@Test(timeout=100)
public void infinity() {
while(true);
}

What is unit testing method naming convention that you follow? 
Ans: Unit tests name should act like the documentation giving a clear idea on what functionality is tested. There are various techniques that could be used to name unit tests. Some of them are following: Given…When…Then.. or Should…Then… etc.


What are top 2-3 advantages of writing unit tests? 
Ans: Design testability, Code testability, Code maintainability as good unit tests enforces OO principles such as Single Responsitbility etc which enables people avoid code smells such as long classes, long methods, large conditionals etc.

What are top 2-3 characteristics of Hard-to-test code? 
Ans: Long methods, Long conditionals, mixing concerns, bulky constructors

What is mocking & stubbing? What are key differences between them? Did you use any mocking framework? 
Ans: Stub and Mock objects are two concepts which helps during unit testing, they are not real object, but act like real object for unit testing purpose.
		One reason of using Stub and Mock object is dependency of one unit into another.
		One of the common testing approach to test a unit, which depends on other unit is by using Stubs and Mock objects. They help to reduce complexity, which may be require to create actual dependent object.
		
		a Stub is an object that simulates real objects with the minimum number of methods required for a test. For example, if your class is dependent upon database, you can use HashMap to simulate database operation. Stub object is mostly created by developers and there method is implemented in predetermined way, they mostly return hard coded values. They also provide methods to verify methods to access stub's internal state, which is necessary to verify internal state of object. On the other Mock objects are usually created by open source library and mock framework like Mockito, jMock and EasyMock. These library helps to create, verify and stub mocks. Mock object has knowledge of how it's methods are executed in a unit test, and it verifies if methods are actually get called against the expected ones. 
		
		Apart from first difference that mock objects are usually created by mock framework, another key difference between Stub and Mock object is how they are used.  Stub object is usually used for state verification, while mock object is mostly used for behaviour verification. As a Java developer, you can take advantage of this powerful testing techniques to test your module in isolation.

What are top 2-3 advantages of mocking? 
Ans: 1. Verify interactions 2. Test the block of code in isolation

How is code cyclomatic complexity related to unit tests? 
Ans: As code cyclomatic complexity is determined based on number of decision points within the code and hence execution paths, higher cyclomatic complexity makes it difficult to attain achieve test/code coverage.

What is code coverage? How is it measured? Name some JUnit code coverage tools? Ans: Cobertura, EclEmma, JaCoCo

Name some code smells which makes it hard to achieve high code coverage? 
Ans: Long method, Large conditionals
What is test-driven development (TDD)? 
Ans: Read the details on Wikipedia page for TDD.